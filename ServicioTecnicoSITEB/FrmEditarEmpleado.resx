<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BntCancelar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="BtnGuardar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wAAADsABataJCQAABKZJREFUaEPtmW9sGmUcx0n0pWavfLFpNNFEk71xlcI4oDBNp1nmokZjljhjFv9M
        bdQ3Zi7LjNH4ZsZuaVwdtNWVAa22qe2MnWa09s9aYawdpdBxx8qKQ9YKLRKpluLWn89z9wxKOa78Ofon
        4Zt8koZ76PP9cL+7a6gER6of2UKZ6Bpp/dCXjx//qRYzHZmvXVxcLBkTwVl2H8yOk5bjCjP9hqKNuZ8t
        lE8qmjzbKDPtU5oZqKwfgh1fdLPc/CsGiUSCZRr9fN59I4Pla/JlIjiX3OuJkz2A90cf4n8KE90iNbgf
        JPVWDzLX4zcLCQxem06+vpwB7820UvnAJ5DExMwpTJMqUlE46NMf3XACCNQrIjd6t5Oa2YMWOu68aSMJ
        YCgTMyU1+reSqvzZyAIYdF2MPtbkuZfUzcxGF8BQZua89pO+u0nl9GwGAQwap0ZSOT2bRYDFxLxJaqey
        mQTQ9RDa3ua+h1TnkovA9VAUTg14MvCh15eXygX0FIZz4Q44du1ToLrfZVH+8h5U9R/JwlFQdVxISZg9
        b5HqXLIJ9DFB3gLF4pufhF3unXmhse9PCZiYn0l1LtkEdn/dw0oE5v6GP0Skf+YSb0khtKP7UgJmZpZU
        55JNoFRIG/S8JYVIEzDRS6Q6l+UCstNW3k3FpFgBDKnOZbkAdfYqVJywZGwqJiUVwKBTBIpmF2K8JFDt
        XbwlhchLoNSoOrt5SwpRFhCTsgCCVOdSFsiTsgCCVOdSFsiTsgCCVOeyUuCp77zw9oXfocZyoyQc7O/l
        LSlEzgLPd/pgZj4BYuTPxAyMxOwZdMx+z1tSCK3jGVD92JZEM1G5B6Mekz2aJnDGNUu2Lz7H6MOgdcl5
        C4kB/t0aq7wnTaCdjpDti4//n+vw9IgGdrn4CxSL5rI8rhmurBAUCIfDEAwGC6bRpUOnX/yzoB2Tg3qw
        8mjGNbBSIBQKQSAQKIoPxt4B7bh4EuzoDMuGJG2Su1YVECPheAj2je4W53pA46ixaUB9sfJhtjxOqQVw
        +sO96FZYvID2ihxUXbrst9GVArFYDCKRiCh8PHYEtM7CJfAYqi2HUE86dwE8w16vVxTGGSe8aH+2oFHS
        4tEZrgZlq53tSapzWYsRuhNn1AFPjlC8JYXA46f6oYXtuK4COPqpevY2yFeUDzx2nzOfJcvnJYC/y4zH
        46IS+zcGB6+8ktMo4TX7HS9AdDFWmIDf7weapkWnz90L1Xb1qk9pPG547BK3lgoTwGdgYWGhJLQHWgWf
        0njMdFOnuB6FCpQyS0u34cOJ93mf0nh0XncegMRt7i9jYQGjJylgvjgA896uNcPvboK9w7KM66HaJgOX
        40RyXZQ+h/rRbEf81SepzoUyuJL/6NbrD4G/7r41pd3wUNpTGo+VrvWRtDWTdVtBiYqzAgb3LVKdi6Lx
        kp4yXmUPHv6mDoy6A2vOy90vsbdLPE57Lc+BQfdq2vFm3WusAPvFc9NlK6nOpeKroW0KvdVHfesAqtm5
        PhhsUNW3B6oGtaA0/sq/BvVTNNiiitO/yUn1VKR6yxZKZ6tBB2vXC+pMZy11toX3GGanzvqRvMH2AKlM
        IpH8D8QlNqzHhmydAAAAAElFTkSuQmCC
</value>
  </data>
</root>